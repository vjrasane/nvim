local M = require("config.diagnostic")

describe("get_distance", function()
  describe("forward", function()
    it("from 1:0 to 100:100", function()
      local ldist, cdist = unpack(M.get_distance(1, { 1, 0 }, { 100, 100 }, 100, 100))
      assert.equals(99, ldist)
      assert.equals(100, cdist)
    end)

    it("from 100:100 to 1:0", function()
      local ldist, cdist = unpack(M.get_distance(1, { 100, 100 }, { 1, 0 }, 100, 100))
      assert.equals(1, ldist)
      assert.equals(0, cdist)
    end)

    it("from 50:50 to 75:75", function()
      local ldist, cdist = unpack(M.get_distance(1, { 50, 50 }, { 75, 75 }, 100, 100))
      assert.equals(25, ldist)
      assert.equals(75, cdist)
    end)

    it("from 50:50 to 25:25", function()
      local ldist, cdist = unpack(M.get_distance(1, { 50, 50 }, { 25, 25 }, 100, 100))
      assert.equals(75, ldist)
      assert.equals(25, cdist)
    end)

    it("from 50:50 to 50:75", function()
      local ldist, cdist = unpack(M.get_distance(1, { 50, 50 }, { 50, 75 }, 100, 100))
      assert.equals(0, ldist)
      assert.equals(25, cdist)
    end)

    it("from 50:50 to 50:25", function()
      local ldist, cdist = unpack(M.get_distance(1, { 50, 50 }, { 50, 25 }, 100, 100))
      assert.equals(100, ldist)
      assert.equals(25, cdist)
    end)
  end)

  describe("backward", function()
    it("from 0:0 to 100:100", function()
      local ldist, cdist = unpack(M.get_distance(-1, { 1, 0 }, { 100, 100 }, 100, 100))
      assert.equals(1, ldist)
      assert.equals(0, cdist)
    end)

    it("from 100:100 to 1:0", function()
      local ldist, cdist = unpack(M.get_distance(-1, { 100, 100 }, { 1, 0 }, 100, 100))
      assert.equals(99, ldist)
      assert.equals(100, cdist)
    end)

    it("from 50:50 to 75:75", function()
      local ldist, cdist = unpack(M.get_distance(-1, { 50, 50 }, { 75, 75 }, 100, 100))
      assert.equals(75, ldist)
      assert.equals(25, cdist)
    end)

    it("from 50:50 to 25:25", function()
      local ldist, cdist = unpack(M.get_distance(-1, { 50, 50 }, { 25, 25 }, 100, 100))
      assert.equals(25, ldist)
      assert.equals(75, cdist)
    end)

    it("from 50:50 to 50:75", function()
      local ldist, cdist = unpack(M.get_distance(-1, { 50, 50 }, { 50, 75 }, 100, 100))
      assert.equals(100, ldist)
      assert.equals(25, cdist)
    end)

    it("from 50:50 to 50:25", function()
      local ldist, cdist = unpack(M.get_distance(-1, { 50, 50 }, { 50, 25 }, 100, 100))
      assert.equals(0, ldist)
      assert.equals(25, cdist)
    end)
  end)
end)
